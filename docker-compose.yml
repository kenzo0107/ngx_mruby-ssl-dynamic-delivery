version: '3'

services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development
    ports:
      - 80:80
      - 443:443
    environment:
      DEFAULT_DOMAIN: localhost
      REDIS_HOST: redis
      ENVIRONMENT: development
      CERTS_URL: http://lambda:9001/2015-03-31/functions/sample/invocations
    links:
      - redis:redis
      - lambda:lambda
      - dynamodb-local

  redis:
    container_name: redis
    image: redis:6.0.5-alpine3.12
    ports:
      - ${REDIS_PORT:-6379}:6379
    volumes:
      - redis:/data

  lambda:
    container_name: lambda
    image: lambci/lambda:nodejs12.x
    volumes:
      - ./docker/lambda:/var/task:ro,delegated
    ports:
      - 9001:9001
    environment:
      DOCKER_LAMBDA_WATCH: 1
      DOCKER_LAMBDA_STAY_OPEN: 1
      AWS_SDK_LOAD_CONFIG: 1
      TABLE_NAME: Certificates
      AWS_ACCESS_KEY_ID: abcd
      AWS_SECRET_ACCESS_KEY: abcd
    command: index.handler

  dynamodb-local:
    container_name: dynamodb-local
    image: amazon/dynamodb-local:latest
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data
    volumes:
      - dynamodb-local-data:/data
    ports:
      - 8000:8000

  dynamodb-admin:
    container_name: dynamodb-admin
    image: aaronshaf/dynamodb-admin:latest
    environment:
      - DYNAMO_ENDPOINT=dynamodb-local:8000
    ports:
      - 8001:8001
    depends_on:
      - dynamodb-local

volumes:
  redis:
  dynamodb-local-data:
